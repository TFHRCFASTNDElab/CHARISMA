CHARISMA-GPR
=======================================

.. image:: ../_static/GPR_CH/Fig0.png
   :width: 120
   :alt: figure 0
   :align: left

What is CHARISMA-GPR?
--------------------------------------

CHARISMA-GPR is a Python-based software designed to automatically process Ground Penetrating Radar (GPR) data for transportation asset management. It provides 2-dimensional contour maps required for the bridge inspection and pavement thickness measurement.

The software features a user-friendly Graphic User Interface (GUI) where users can easily input two key items: (i) the directory path of the GPR data and (ii) the GPR scanning configurations. Once the input is provided, CHARISMA-GPR generates results that include both raw data and the intermediate processing steps.

Users don’t need to understand the underlying code or have prior knowledge of GPR data processing—simply clicking a button gives asset owners the insights they need to make critical decisions about the maintenance and upkeep of infrastructure. 

Each algorithm is validated through lab specimens and testing fields. The research team welcomes the community to use, test, and improve the software through the CHARISMA project. All data and code are available at the GitHub repository of CHARISMA. Future work will expand to other common NDE technologies for highway infrastructure inspection. 

How it works?
-----------------------------------------

CHARISMA-GPR creates a 2-dimensional grid space based on the user input and fill up this space with the multiple GPR scans. In our software, you have the flexibility to define the x and y directions of the 2D contour map based on your perspective of the scan area. Since the orientation may vary depending on where you stand, you can choose which direction corresponds to the x and y axes. For example, if you are standing on the north side looking south, you might decide that the x-axis runs west to east, and the y-axis runs north to south. However, if you change your position—say, standing on the south side looking north—your definition of the x and y axes will flip. This shift in perspective can cause confusion if the directionalities aren’t clearly defined based on your view. To avoid this, we’ve made the configuration flexible, allowing you to set the axes according to your unique viewpoint, ensuring a user-friendly experience and enhanced accessibility regardless of your orientation in the field.

After defining these axes, you'll select the scan origin, which is the starting point for filling the grid. The origin can be any of the four corners of the rectangular area, depending on your setup. Once the axes and origin are set, you'll choose the scan direction, which can either follow the x-axis or y-axis. Since there are four possible origins and two scan directions for each, there are eight potential configurations for how the grid is filled. Based on your selections, the software will process the GPR data and generate the 2D contour map accordingly, ensuring that the output matches your defined setup and perspective.

Assumptions
------------------------------------------

1.	**File Format Support**: CHARISMA-GPR currently supports only the :code:`.DZT` file format. Support for other formats, such as :code:`.SGY` and :code:`.CSV`, will be added soon.

2.	**Grid Space Assumptions**: The software assumes a rectangular grid layout with linear GPR scans to generate a contour map. It accepts multiple GPR scan files, each representing a linear scan taken at regular intervals. These files fill the grid and create a contour map through interpolation. If the scanning area is not rectangular (e.g., trapezoidal or parallelogram), the contour map may become distorted.

3.	**Single Channel Requirement**: Currently, CHARISMA-GPR does not support multiple-channel DZT files. It only accepts a series of DZT files containing single linear scans. Although DZT files can hold multiple scan lines, only those with one scan per file are accepted.

4.	**Rebar Mapping Algorithm**: The software employs the F-K migration algorithm for rebar mapping, which assumes that the dielectric constant of the subsurface materials remains constant throughout the entire area.

Requirements
----------------------------------------------

1.	**Directory Structure**: Create a directory containing a series of single-channel :code:`.DZT` files.

2.	**File Naming Convention**: The file names should be ordered numerically using padded numbering (e.g., 001, 002, 003). Using a simple sequence like 1, 2, 3, … will change the order. Specifically, the order may appear as 1, 10, 2, 3, etc., because the number "1" is at the beginning.

3.	**Grid Space Information**: You need to know the dimensions of the grid space, including the x and y distances in a specific unit, as well as the scan origin point.

How to use?
------------------------------------------------

1.	Download the :code:`CHARISMA_GPR.zip`: 

https://github.com/TFHRCFASTNDElab/CHARISMA/blob/main/ground-penetrating-radar/CHARISMA_GPR/CHARISMA_GPR.zip 

2.	Unzip the directory and run the :code:`CHARISMA_GPR.exe` file. (The :code:`_internal` directory is necessary to run the executable file.)

3. You will see two screens: one displaying the GUI and the other showing the Python logger.

4. Choose the application you want (Bridge or Pavement).

Bridge Inspection
------------------------------------------------

1. Click **Bridge Inspection** in the GUI.

   .. figure:: ../_static/GPR_CH/Fig1.png
      :width: 700
      :alt: figure 1
      :align: center

      Figure 1: GUI Screen for Bridge Inspection

   .. raw:: html

      <br>

2. Choose the data format and click **Select Data Directory**.

   .. figure:: ../_static/GPR_CH/Fig2.png
      :width: 700
      :alt: figure 2
      :align: center

      Figure 2: Click the Data Directory after selecting the data format type

   .. raw:: html

      <br>

3. A file browser will appear. Select the directory containing your GPR scan files.

    .. figure:: ../_static/GPR_CH/Fig3.png
       :width: 700
       :alt: figure 3
       :align: center
       
       Figure 3: Selecting the Data Directory
    
    .. raw:: html
       
       <br>   
       
    .. figure:: ../_static/GPR_CH/Fig4.png
       :width: 800
       :alt: figure 4
       :align: center
       
       Figure 4: Shows a series of GPR data in the specified directory 
       
    .. raw:: html
       
       <br>   
       
4. A new window for GPR scan configuration settings will open.


    .. figure:: ../_static/GPR_CH/Fig5.png
       :width: 800
       :alt: figure 5
       :align: center
       
       Figure 5: GPR Scan Configuration Settings window
       
    .. raw:: html
       
       <br>   
       
5. To manually set the dielectric constant, uncheck **Automatic Dielectric Constant Characterization**. The automatic algorithm will still run for reference, but your manual value will be used for data processing.

6. Choose the scanning space unit: Meters, Inches, or Feet.

7. Enter the x and y distance values for your scanning area. Imagine the scanned space as a rectangle, with x as the base and y as the height.

8. Select the origin based on the vertex from where you began scanning.

9. Choose the scanning direction: either along the x or y axis from your selected origin.

10. Click **Visualize** to verify your scanning configuration. If the schematic is not matching with what you expected, select other configurations and click **Visualize** again.

    .. figure:: ../_static/GPR_CH/Fig6.png
       :width: 800
       :alt: figure 6
       :align: center
       
       Figure 6: Clicking Visualization will show a schematic figure of your GPR scanning configuration.
       
    .. raw:: html
       
       <br>   
       
11. Click **Confirm** to close the GPR Scan Configuration window.

12. Click **Confirm** again to finalize the directory selection. A message will confirm the number of files detected.

    .. figure:: ../_static/GPR_CH/Fig7.png
       :width: 700
       :alt: figure 7
       :align: center
       
       Figure 7: Final confirmation with the green message that the GPR scan files are detected.
       
    .. raw:: html
       
       <br>  

13. The Python logger will display the progress of data processing. Once complete, a new window will appear.

    .. figure:: ../_static/GPR_CH/Fig8.png
       :width: 700
       :alt: figure 8
       :align: center
       
       Figure 8: After confirmation, the software shows the progress through Python console.
       
    .. raw:: html
       
       <br>  

14. Use the left side buttons to view your results. Right clicking the image allows you to save it as a :code:`.PNG` file.


    .. figure:: ../_static/GPR_CH/Fig9.png
       :width: 800
       :alt: figure 9
       :align: center
       
       Figure 9: Result Plotter
       
    .. raw:: html
       
       <br>  
       
15. The upper-left dropdown menu lets you check the raw data and intermediate results, with the GPR scan files listed in the directory.


Pavement Thickness
------------------------------------------------ 

1.	Click **Pavement Thickness** in the GUI.

2.	Choose the data format and click **Select Data Directory**.

3.	A file browser will appear. Select the directory containing your GPR scan files.

4.	A new window for parameters and GPR scan configuration settings will open.

    .. figure:: ../_static/GPR_CH/Fig10.png
       :width: 800
       :alt: figure 10
       :align: center
       
       Figure 10: Parameter setup & GPR scan configuration settings
       
    .. raw:: html
       
       <br>  

5.	Enter the GPR antenna frequency, estimated dielectric constant, and bits per sample according to your GPR settings.

6.	Enter the expected pavement thickness. This value sets the midpoint of the contour colorbar, indicating with some colors if the pavement thickness is above or below your expectations.

7.	Choose the scanning space unit: Meters, Inches, or Feet.

8.	Enter the x and y distance values for your scanning area. Imagine the scanned space as a rectangle, with x as the base and y as the height.

9.	Select the origin based on the vertex where you began scanning.

10.	Choose the scanning direction: either along the x or y axis from your selected origin.

11.	Click **Visualize** to verify your scanning configuration. If the schematic is not matching with what you expected, select other configurations and click **Visualize** again.

12.	Click **Confirm** to close the GPR scanning configuration window.

13.	Click **Confirm** again to finalize the directory selection. A message will confirm the number of detected files.

14.	The Python logger will display the progress of data processing. Once complete, a new window will appear.

    .. figure:: ../_static/GPR_CH/Fig11.png
       :width: 800
       :alt: figure 11
       :align: center
       
       Figure 11: Parameter setup & GPR scan configuration settings
       
    .. raw:: html
       
       <br>  

15.	Use the left side buttons to view your results. Right-clicking the image allows you to save it as a :code:`.PNG` file.

16.	The upper-left dropdown menu lets you check the raw data and intermediate results, with the GPR scan files listed.

17.	Click **Export CSV** to save the results as a :code:`.CSV` file. A new window will open for you to enter the file name, and the file will be saved in the :code:`csv` directory within the parent directory containing the GPR files.

